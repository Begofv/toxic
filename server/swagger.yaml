swagger: '2.0'
info:
  title: Task Management API
  description: API votar a tu amigo mas toxico
  version: 1.0.0
host: localhost:3015
basePath: /api
securityDefinitions:
  bearerAuth:
    type: apiKey
    name: Authorization
    in: header
    description: >-
      Enter the token with the `Bearer: ` prefix, e.g. "Bearer abcde12345".
security:
  - bearerAuth: []
tags:
  - name: User
    description: User management
  - name: Project
    description: Project management
  - name: Task
    description: Task management
paths:
  /categories:
    get:
      summary: Get all categories
      tags:
        - Category
      responses:
        '200':
          description: Successful response
    post:
      summary: Create a new category
      tags:
        - Category
      parameters:
        - name: category
          in: body
          required: true
          schema:
            $ref: '#/definitions/Category'
      responses:
        '200':
          description: Successful response
  /groups:
    get:
      summary: Get all groups
      tags:
        - Group
      responses:
        '200':
          description: Successful response
    post:
      summary: Create a new group
      tags:
        - Group
      parameters:
        - name: group
          in: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '200':
          description: Successful response
  /users:
    get:
      summary: Get all users
      tags:
        - User
      responses:
        '200':
          description: Successful response
    post:
      summary: Create a new user
      tags:
        - User
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Successful response
  /votes:
    get:
      summary: Get all votes
      tags:
        - Vote
      responses:
        '200':
          description: Successful response
    post:
      summary: Create a new vote
      tags:
        - Vote
      parameters:
        - name: vote
          in: body
          required: true
          schema:
            $ref: '#/definitions/Vote'
      responses:
        '200':
          description: Successful response
  /users/{userId}:
    get:
      summary: Get a user by ID
      tags:
        - User
      parameters:
        - name: userId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Successful response
  /users/byproperty:
    get:
      summary: Get users by property
      tags:
        - User
      parameters:
        - name: property
          in: query
          required: true
          type: string
        - name: value
          in: query
          required: true
          type: string
      responses:
        '200':
          description: Successful response
  /votes/{id}:
    get:
      summary: Get a vote by ID
      tags:
        - Vote
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Successful response
  /votes/bygroup/{group}:
    get:
      summary: Get votes by group
      tags:
        - Vote
      parameters:
        - name: group
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Successful response
  /categories/{id}:
    get:
      summary: Get a category by ID
      tags:
        - Category
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Successful response
  /categories/{id}:
    delete:
      summary: Delete a category
      tags:
        - Category
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Successful response
  /groups/{id}:
    get:
      summary: Get a group by ID
      tags:
        - Group
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Successful response
  /groups/{id}:
    put:
      summary: Update a group
      tags:
        - Group
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: group
          in: body
          required: true
          schema:
            $ref: '#/definitions/Group'
      responses:
        '200':
          description: Successful response
  /groups/{id}:
    delete:
      summary: Delete a group
      tags:
        - Group
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Successful response
  /groups/{id}/friend:
    post:
      summary: Add a friend to a group
      tags:
        - Group
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: userId
          in: body
          required: true
          schema:
            type: object
            properties:
              userId:
                type: string
      responses:
        '200':
          description: Successful response
  /users/{id}:
    put:
      summary: Update a user
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Successful response
  /users/{id}:
    delete:
      summary: Delete a user
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Successful response
```